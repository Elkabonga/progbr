{"version":3,"sources":["components/Cards.js","components/ListaItem.js","components/List.js","components/TodoForm.js","components/Item.js","components/Modal.js","Todo.js","reportWebVitals.js","index.js"],"names":["Cards","props","className","children","DoneImg","done","src","alt","ListItem","item","text","onClick","onDone","onItemDeleted","List","items","map","id","TodoForm","useState","setText","type","onChange","event","t","target","value","preventDefault","onAddItem","Item","this","lastId","Modal","onHideModal","show","SAVED_ITEMS","Todo","showModal","setShowModal","setItems","useEffect","savedItems","JSON","parse","localStorage","getItem","setItem","stringify","updatedItems","it","filteredItems","filter","e","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b6e14c04.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nfunction Cards(props) {\r\n  return (\r\n    <div className={props.className ? `${props.className} card` : \"card\"}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import React from \"react\";\r\nimport Cards from \"./Cards\";\r\n\r\nfunction DoneImg(props) {\r\n  if (props.done) {\r\n    return <img src=\"./assets/on.png\" alt=\"done\" />;\r\n  } else {\r\n    return <img src=\"./assets/off.png\" alt=\"undone\" />;\r\n  }\r\n}\r\n\r\nfunction ListItem(props) {\r\n  return (\r\n    <li>\r\n      <Cards className={props.item.done ? \"done item\" : \"item\"}>\r\n        {props.item.text}\r\n        <div className=\"containerButton\">\r\n          <button\r\n            onClick={() => {\r\n              props.onDone(props.item);\r\n            }}\r\n          >\r\n            <DoneImg done={props.item.done}></DoneImg>\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              props.onItemDeleted(props.item);\r\n            }}\r\n          >\r\n            <img src=\"./assets/bin.png\" alt=\"delete\" />\r\n          </button>\r\n        </div>\r\n      </Cards>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport ListItem from \"./ListaItem\";\r\n\r\nfunction List(props) {\r\n  return (\r\n    <ul>\r\n      {props.items.map((item) => (\r\n        <ListItem\r\n          key={item.id}\r\n          item={item}\r\n          onDone={props.onDone}\r\n          onItemDeleted={props.onItemDeleted}\r\n        ></ListItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default List;\r\n","import React, { useState } from \"react\";\r\n\r\nfunction TodoForm(props) {\r\n  const [text, setText] = useState(\"\");\r\n\r\n  function handleChange(event) {\r\n    let t = event.target.value;\r\n    setText(t);\r\n  }\r\n\r\n  function addItem(event) {\r\n    event.preventDefault();\r\n    if (text) {\r\n      props.onAddItem(text);\r\n      setText(\"\");\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form>\r\n      <input type=\"text\" onChange={handleChange} value={text} />\r\n      <button onClick={addItem}>Add</button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default TodoForm;\r\n","class Item {\r\n  static lastId = 0;\r\n\r\n  constructor(text) {\r\n    this.id = Item.lastId++;\r\n    this.text = text;\r\n    this.done = false;\r\n  }\r\n}\r\n\r\nexport default Item;\r\n","import React from \"react\";\r\nimport Card from \"./Cards\";\r\n\r\nfunction Modal(props) {\r\n  return (\r\n    <div\r\n      id=\"modal\"\r\n      onClick={props.onHideModal}\r\n      className={props.show ? \"modal\" : \"modal hide\"}\r\n    >\r\n      <Card className=\"cardModal\">{props.children}</Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport List from \"./components/List\";\r\nimport TodoForm from \"./components/TodoForm\";\r\nimport Item from \"./components/Item\";\r\nimport Modal from \"./components/Modal\";\r\nimport \"./Todo.css\";\r\n\r\nconst SAVED_ITEMS = \"savedItems\";\r\n\r\nfunction Todo() {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [items, setItems] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let savedItems = JSON.parse(localStorage.getItem(SAVED_ITEMS));\r\n    if (savedItems) {\r\n      setItems(savedItems);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(SAVED_ITEMS, JSON.stringify(items));\r\n  }, [items]);\r\n\r\n  function onAddItem(text) {\r\n    let it = new Item(text);\r\n\r\n    setItems([...items, it]);\r\n  }\r\n\r\n  function onItemDeleted(item) {\r\n    let filteredItems = items.filter((it) => it.id !== item.id);\r\n\r\n    setItems(filteredItems);\r\n  }\r\n\r\n  function onDone(item) {\r\n    let updatedItems = items.map((it) => {\r\n      if (it.id === item.id) {\r\n        it.done = !it.done;\r\n      }\r\n      return it;\r\n    });\r\n    setItems(updatedItems);\r\n  }\r\n\r\n  function onHideModal(e) {\r\n    let target = e.target;\r\n    if (target.id === \"modal\") {\r\n      setShowModal(false);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <header className=\"header\">\r\n        <h1>Todo</h1>\r\n        <button className=\"addButton\" onClick={() => { setShowModal(true) }}>+</button>\r\n      </header>\r\n\r\n      <List onDone={onDone} onItemDeleted={onItemDeleted} items={items}></List>\r\n      <Modal show={showModal} onHideModal={onHideModal}>\r\n        <TodoForm onAddItem={onAddItem}></TodoForm>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Todo;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Todo from \"./Todo\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Todo />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}